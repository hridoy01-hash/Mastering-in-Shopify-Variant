<style>
  body {
    font-family: 'Poppins';
  }

  /* Hide the default radio button */
  .product_variant_wrapper input[type='radio'] {
    display: none;
  }

  /* Style the custom button-like radio button */
  .custom-radio-button {
    display: inline-block;
    padding: 0.7rem 2rem;
    background-color: #fff;
    color: #616161;
    cursor: pointer;
    font-size: 12px;
    font-weight: 500;
    border: 1px solid #ebebeb;
    border-radius: 40px;
  }

  /* Style for when the radio button is checked */
  .product_variant_wrapper input[type='radio']:checked + .custom-radio-button {
    background-color: #121212;
    color: #fff;
    border: 1px solid black;
  }

  .product_variant_wrapper {
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  .active_thumbs_img {
    border: 2px solid black;
  }
</style>

<div class="container">
  <div class="product_main_wrapper pt-5">
    <div class="row product_inner_content">
      <div class=" col-md-6 product_image">
        <div class="display_image_wrapper">
          {% if product.selected_or_first_available_variant.featured_image %}
            {% liquid
              assign featured = product.selected_or_first_available_variant.featured_image
            %}
            <img
              id="product_img"
              src="{{ featured |  img_url: 'master'}}"
              alt="{{ product.title }}"
              width="100%"
              height="auto"
            >
          {% else %}
            {% liquid
              assign featured = product.featured_image
            %}
            <img src="{{ featured |  img_url: 'master'}}" alt="{{ product.title }}" width="100%" height="auto">
          {% endif %}

          <div class="galery_img">
            <ul style="padding-left: 0px; display:grid;gap:20px;list-style:none;padding-top:10px;grid-template-columns: minmax(min-content, 300px) minmax(200px, 1fr) 150px;">
              {% for image in product.images %}
                <li class="{%  if featured == image %} active_thumbs_img {% endif %}">
                  <img src="{{ image |  img_url: 'medium' }}" alt="{{ product.title }}" width="100%" height="200px">
                </li>
              {% endfor %}
            </ul>
          </div>
        </div>
      </div>
      <div class=" col-md-6 product_text_content">
        <h2 style="font-weight: 700;">{{ product.title }}</h2>
        <span>{{ product.vendor }}</span>

        <div class="product_price_wrappper mt-2">
          <h4 class="product_compare_price text-decoration-line-through">
            {{ product.selected_or_first_available_variant.compare_at_price | money }}
          </h4>
          <h4 class="product_price">{{ product.selected_or_first_available_variant.price | money }}</h4>
        </div>

        <p>{{ product.description }}</p>

        {% form 'product', product %}
          <input
            id="product_variant_id"
            type="hidden"
            name="id"
            value="{{ product.selected_or_first_available_variant.id }}"
          >
          <div class="product_variant_wrapper">
            <h5>Product Variants</h5>
            {% for option in product.options_with_values %}
              <fieldset>
                <legend>{{ option.name }}</legend>
                {% for value in option.values %}
                  <input
                    {% if option.selected_value == value %}
                      checked
                    {% endif %}
                    type="radio"
                    id="{{ option.name |  handleize }}-{{ value }}"
                    name="{{ option.name }}"
                    value="{{ value }}"
                    hidden
                  >
                  <label for="{{ option.name |  handleize }}-{{ value }}" class="custom-radio-button">
                    {{- value -}}
                  </label>
                {% endfor %}
              </fieldset>
            {% endfor %}

            {% if product.selected_or_first_available_variant.inventory_quantity < 0 %}
              <span class="inventory_quantity" style="font-size: 14px;">Out of stock</span>

            {%- elsif product.selected_or_first_available_variant.inventory_quantity > 0
              and product.selected_or_first_available_variant.inventory_quantity < 10
            -%}
              <span class="inventory_quantity" style="font-size: 14px;"
                >Only {{ product.selected_or_first_available_variant.inventory_quantity }} left !</span
              >
            {%- else -%}
              <span class="inventory_quantity" style="font-size: 14px;"
                >Available stock : {{ product.selected_or_first_available_variant.inventory_quantity -}}
              </span>
            {% endif %}
          </div>

          <div class="mt-4">
            <input class="text-center" type="number" name="quantity" id="quantity" min="1" value="1">
            <button
              {% unless product.selected_or_first_available_variant.available %}
                disabled
              {% endunless %}
              type="submit"
              class="add_to_cart"
            >
              {% if product.selected_or_first_available_variant.available %}
                Add to cart
              {% else %}
                Stock out
              {% endif %}
            </button>
            <button
              {% unless product.selected_or_first_available_variant.available %}
                disabled
              {% endunless %}
              type="submit"
              class="buy_now"
            >
              {% if product.selected_or_first_available_variant.available %}
                Buy it now
              {% else %}
                Stock out
              {% endif %}
            </button>
          </div>
        {% endform %}
      </div>
    </div>
  </div>
</div>

<script>
  const product = {{ product | json }}
  document.querySelectorAll('.product_variant_wrapper input[type="radio"]').forEach((radioButton) => {
    radioButton.addEventListener("click", function () {

      // empty array for selected option
      const selectedOptions = [];
      document.querySelectorAll('.product_variant_wrapper input[type="radio"]:checked').forEach((radioValue) => {
        selectedOptions.push(radioValue.value);
      });

      let matchedVariants = product.variants.find(variant => {
        let pass = true;
        for (let i = 0; i < selectedOptions.length; i++) {
          if (selectedOptions.indexOf(variant.options[i]) === -1) {
            pass = false
            break;
          }
        }
        return pass;
      });

      console.log("matchedVariants", matchedVariants);

      // update product variant ID
      document.getElementById("product_variant_id").value = matchedVariants.id;

      // update variant URL
      let URL = new URLParse(window.location.href, true);
      URL.query.variant = matchedVariants.id;
      window.history.replaceState(null, null, URL);

      // update price
      document.querySelector(".product_compare_price").textContent = formatMoney(matchedVariants.compare_at_price, "{{ shop.money_format }}");
      document.querySelector(".product_price").textContent = formatMoney(matchedVariants.price, "{{ shop.money_format }}");

      // update display img
      if(matchedVariants.featured_image){
        document.querySelector('.display_image_wrapper img').setAttribute("src" ,`${matchedVariants.featured_image.src}` );
        document.querySelector('.galery_img li.active_thumbs_img').classList.remove('active_thumbs_img');
        document.querySelectorAll('.galery_img li')[matchedVariants.featured_image.position - 1].classList.add('active_thumbs_img');

      }else{
        console.log(" img not found ");
      }

      // update add cart button
      const addToCart = document.querySelector(".add_to_cart");
      const buyNow = document.querySelector('.buy_now')
      if(matchedVariants.available){
        addToCart.textContent = 'Add To Cart'
        addToCart.disabled = false
        buyNow.textContent = 'Buy it now'
        buyNow.disabled = false

      }else{
        addToCart.textContent = 'Out of Stock'
        addToCart.disabled = true
        buyNow.textContent = 'Out of Stock'
        buyNow.disabled = true
      }

      // update buy now button
      buyNow.addEventListener("click" , function(e){
        e.preventDefault();
        let form =  document.querySelector(".shopify-product-form")
        // <input type="hidden" name="return_to" value="/checkout" />
        let input = document.createElement("input");
        input.value = "/checkout"
        input.type = 'hidden'
        input.name = 'return_to'
        form.appendChild(input)
        form.submit();
      });


    });
  });

  // update thums image
  document.querySelectorAll('.galery_img li').forEach((li) => {
    li.addEventListener("click", function () {
      document.querySelector('.galery_img li.active_thumbs_img').classList.remove("active_thumbs_img");
      li.classList.add("active_thumbs_img");
      document.querySelector('.display_image_wrapper img').src = li.children[0].getAttribute("src");
    });
  });

  // update inverntory quantity
  let customVariantObject = {};
  {%- for variant in product.variants -%}
    customVariantObject[{{- variant.id -}}] = { inventoryQuantity: {{ variant.inventory_quantity |  default:0 }}};
  {%- endfor -%}
  
  const oldQueryString = window.location.search;
  const oldUrlParams = new URLSearchParams(oldQueryString);
  let oldVariantID = oldUrlParams.get("variant");

  document.querySelector(".product_variant_wrapper").addEventListener("change" , function(){
    const newQueryString = window.location.search;
    const newUrlParams = new URLSearchParams(newQueryString);
    let newVariantID = newUrlParams.get("variant");

  
    if (newVariantID !== oldVariantID) {
    oldVariantID = newVariantID;

  let inventory_quantity = document.querySelectorAll(".inventory_quantity");

    for (let i = 0; i < inventory_quantity.length; i++) {
      if (customVariantObject[newVariantID].inventoryQuantity <= 0) {
        inventory_quantity[i].textContent = `Out of stock`;
      } else if (
        customVariantObject[newVariantID].inventoryQuantity > 0 &&
        customVariantObject[newVariantID].inventoryQuantity <= 10
      ) {
        inventory_quantity[i].textContent = `Only ${customVariantObject[newVariantID].inventoryQuantity} left!`;
      } else {
        inventory_quantity[i].textContent = `Available stock: ${customVariantObject[newVariantID].inventoryQuantity}`;
      }
    }
  }


    



  });
</script>
